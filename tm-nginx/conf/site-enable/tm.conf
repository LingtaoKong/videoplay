map $workip $nextjump {
    default  work04;
    ~*10.29.2.148 work03;
    ~*10.29.2.149 work04;
    ~*10.29.2.150 work05;
    ~*videoplay03 work03;
    ~*videoplay04 work04;
    ~*videoplay05 work05;
}
server {
    listen 4445 ssl; #https 服务端口 443
    listen 443 ssl; #https 服务端口 443
    server_name s2.xmssvideo.micloud.mi.com;
    
    ssl on;
    ssl_certificate         ssl/s2.xmssvideo.micloud.mi.com.crt;
    ssl_certificate_key     ssl/s2.xmssvideo.micloud.mi.com.key;
    ssl_session_cache  shared:SSL:80m;
    ssl_session_timeout  5m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;   ### 主要是ssl方式加解密存在漏洞，https://www.openssl.org/~bodo/ssl-poodle.pdf
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SH;
    ssl_prefer_server_ciphers   on;


    set $upstream_list_counts  1;       # 设置后端转码worker 数量，与upstream 的配置server相等
    proxy_set_header Host $host;            #透传请求host

    lua_code_cache off;                 # 关闭 lua 代码 cache 功能
    location / {                         # location http服务
        root html;
        more_set_headers "Access-Control-Allow-Origin: *";              #增加响应头，解决跨域问题
        content_by_lua_file /home/work/nginx/conf/site-enable/hash_get.lua; # lua文件   
    }       

    location ~ ^/downdata/(.*)/ {
	set $workip $1;
	proxy_pass http://$nextjump;
    }    

    location ~ ^/proxy {                                                    # proxy location，用于用户请求处理，请>求转到upstream模块
        if ( $uri ~ "/proxy(.*)" ) {                         # 正则匹配
            proxy_pass http://work_upstream$1?$args;     # proxy_pass
        }           
    }          
}               

